# Accompany Women - 女性私密陪伴系统需求文档

## 1. 项目概述
面向25-45岁女性用户的私密陪伴Web应用，提供安全、私密的虚拟角色互动体验。

### 1.1 开发流程
- 前期调研：
  * 参考SillyTavern项目的实现方案
  * 分析其角色系统、表情系统设计
  * 研究其语音交互和TTS集成方案
  * 学习其用户界面和交互设计

- 方案设计：
  * 提出初步技术方案
  * 与产品确认功能细节
  * 制定具体实现计划
  * 确定技术栈选择

- 迭代开发：
  * 先搭建基础框架
  * 逐步实现核心功能
  * 持续优化用户体验
  * 根据反馈调整方案

### 1.2 参考项目
- SillyTavern：
  * 角色系统实现
  * 表情切换机制
  * 语音集成方案
  * 界面交互设计

## 2. 核心功能

### 2.1 用户系统
- 游客体验：
  * 首次访问自动获得30轮免费对话
  * 用完后弹出注册/登录窗口
  * 游客对话记录在注册后自动关联到账号

- 账号系统：
  * 简单注册：仅需用户名和密码
  * 无需绑定手机或邮箱
  * 支持修改密码

- 付费机制：
  * 通过微信/支付宝收款码完成支付
  * 管理员后台确认后手动开通对话轮数
  * 可选充值套餐（对话轮数）
  * 实时显示剩余对话轮数

### 2.2 首页
- 五大场景分类：职场、校园、都市、古代、玄幻
- 每个场景下展示对应角色卡片
- 顶部搜索栏
- 底部导航栏：
  * 左侧：首页按钮
  * 中间：聊天按钮
  * 右侧：历史记录按钮

### 2.3 角色系统
- 支持PNG格式角色卡导入
- 自动解析角色设定
- 支持多表情切换
- 管理员可设置场景分类
- 动态角色图片支持：
  * 支持PNG/JPG/GIF/APNG/WEBP等多种图片格式
  * 表情切换时有200ms淡入淡出过渡效果
  * 每个角色可设置独立的表情文件夹
- AI语音设置：
  * 管理员可在角色设定界面配置默认语音
  * 支持接入多个TTS服务（如ElevenLabs、Azure TTS等）
  * 可设置语音参数（音调、语速、音量等）
  * 用户可在对话界面临时切换其他语音
- 音乐系统：
  * 每个角色可设置四种场景音乐：
    + bgm：常规背景音乐（循环）
    + intimate：亲密音乐（循环）
    + climax：高潮音乐（单次）
    + afterglow：余韵音乐（循环，自动切回bgm）
  * 管理员音频配置：
    + 设定每个音频的播放音量
    + 设定淡入淡出过渡时间
    + 设定是否循环播放
- 使用人数统计：
  * 管理员可开启/关闭自动统计功能
  * 开启时自动统计与角色对话的用户数
  * 关闭时允许管理员手动设置使用人数
  * 使用人数显示：
    + 首页角色列表中显示
    + 对话页面角色头像右侧显示

### 2.4 对话界面
[实现文件: frontend/src/pages/Chat.tsx]

#### 2.4.1 基础布局
[实现文件: frontend/src/components/Layout.tsx, frontend/src/pages/Chat.tsx]
- 全屏立绘（适配手机竖屏）
  * 背景渐变：上半部分透明，下半部分渐变为深色
  * 立绘透明度：0.6
- 页面布局（固定高度）：
  * 整体页面高度固定为100vh，禁止页面滚动
  * 顶部信息栏：毛玻璃效果，半透明背景
  * 中间消息区域：固定为屏幕高度的50%，仅在区域内滚动
  * 底部输入栏：毛玻璃效果，固定在页面底部
  * 为底部导航栏预留56px空间
- 消息区域特性：
  * 隐藏传统滚动条
  * 保留鼠标滚轮滚动功能
  * 新消息自动滚动到底部
  * 内容溢出时仅在消息区域内滚动

#### 2.4.2 消息展示
[实现文件: frontend/src/pages/Chat.tsx]
- 消息气泡样式
  * 半透明毛玻璃效果（backdrop-filter: blur(10px)）
  * 圆角矩形设计（border-radius: 8px）
  * AI消息使用深色半透明背景（rgba(32, 32, 32, 0.75)）
  * 用户消息使用米色半透明背景（rgba(245, 235, 224, 0.75)）
  * AI消息气泡宽度为80%，最大宽度600px
  * 用户消息气泡宽度自适应内容，最大宽度70%（移动端）或65%（桌面端）
  * 所有文字内容左对齐
  * AI消息文字宽度为气泡的95%

- 消息内容样式
  [实现位置: Chat.tsx 中的 Typography 组件样式设置]
  * 旁白：白色字体，较小字号（0.85rem）
  * 角色说话：橙色字体（#FFA500），放入双引号内
  * 角色心声：灰色字体（rgba(255, 255, 255, 0.6)），放入小括号内，斜体样式
  * 简介内容：保持原有样式不变
  * 用户消息：深灰色字体（#333333）

- 角色简介卡片
  * 固定显示在消息列表顶部
  * 第一行显示加粗的"简介"标题
  * 默认显示部分内容（4.8em高度）
  * 点击展开按钮可查看完整内容
  * 宽度与AI消息气泡一致（80%）
  * 最大宽度600px
  * 文字内容宽度为气泡的95%

- 音乐控制
  * 右上角显示音乐开关按钮
  * 位于收起按钮和菜单按钮之间
  * 默认开启状态（高亮显示）
  * 关闭状态显示灰色图标

- 开场白气泡
  * 紧跟简介卡片显示
  * 包含场景描述和动作描述
  * 完整显示所有内容（不截断）

- AI回复气泡
  * 左侧显示语音播放按钮
  * 播放时显示剩余时间
  * 完整显示所有内容（不截断）

- 语音播放按钮
  [实现位置: Chat.tsx 中的 IconButton 组件]
  * 位置：消息气泡右侧外部（right: -48px）
  * 样式：深色半透明背景（rgba(32, 32, 32, 0.75)）
  * 状态：
    + 普通状态：白色图标（rgba(255, 255, 255, 0.7)）
    + 播放中：主题色图标
    + 加载中：显示加载动画（CircularProgress）
  * 悬停效果：背景色加深（rgba(32, 32, 32, 0.9)）
  * 垂直居中对齐（transform: translateY(-50%)）

#### 2.4.3 交互功能
- 清屏功能
  * 点击右上角按钮隐藏所有消息
  * 隐藏时保持输入栏可见
  * 再次点击恢复显示所有消息

- 消息滚动控制
  * 新消息默认自动滚动到底部
  * 当用户滚动超过500px时，禁止自动滚动
  * 用户主动滚动时（无论距离），暂时禁止自动滚动
  * 语音播放不触发自动滚动
  * 用户停止滚动150ms后恢复自动滚动判定

- 消息输入
  * 支持多行文本输入
  * Enter键发送，Shift+Enter换行
  * 空消息时自动替换为"继续"
  * 发送按钮始终可点击
  * 发送消息后自动清空输入框

- 语音功能
  * 支持语音输入
  * AI回复支持语音播放
  * 播放时显示时长倒计时

#### 2.4.4 隐私保护
- 快速锁屏（双击电源键）
- 耳机自动降低音量
- 来电自动暂停

### 2.5 历史记录
[实现文件: frontend/src/pages/History.tsx]
- 通过底部导航栏右侧按钮访问
- 布局设计：
  * 顶部搜索栏（可搜索对话内容）
  * 对话列表（按时间倒序排列）
  * 每条记录显示：
    + 角色头像
    + 角色名称
    + 最后一条消息预览
    + 消息数量统计
    + 最后对话时间

### 2.6 管理页面
[实现文件: frontend/src/pages/Manage.tsx]
- 通过聊天界面右上角菜单访问
- 个人信息管理：
  * 用户名修改
  * 密码修改
  * 账户余额查看
  * 自定义角色对我的称呼（默认为空，显示"默认"）
  [实现位置: Manage.tsx 中的称呼设置组件]

- 系统设置：
  * 对话设置
    + 更改背景图片（支持预览和选择）
    [实现位置: Manage.tsx 中的背景图片选择对话框]
  * 声音设置
    [实现位置: Manage.tsx 中的声音设置组件]
    + 自动播放对话语音（开关）
    + 对话语音内容选择
      * 他的说话（默认开启）
      * 他的心声（默认关闭）
      * 旁白（默认关闭）
    + 背景音乐音量（滑动控制）

### 2.7 系统安全
[待实现]
- 数据安全：
  * 对话内容加密存储
  * 定期数据备份
  * 敏感信息脱敏

### 2.8 性能优化
[待实现]
- 图片资源CDN加速
- 语音数据缓存机制
- 大量历史记录延迟加载
- 移动端性能优化

### 2.9 导航与布局
[实现文件: frontend/src/components/Layout.tsx]
- 底部导航栏
  [实现位置: Layout.tsx 中的 BottomNavigation 组件]
  * 固定高度：56px
  * 背景：深色半透明（rgba(32, 32, 32, 0.75)）
  * 毛玻璃效果（backdrop-filter: blur(10px)）

- 页面切换效果
  [实现位置: Layout.tsx 中的 PageTransition 组件]
  * 页面间平滑过渡
  * 保持导航栏固定

## 3. 技术选型
[实现文件: frontend/package.json]
- 前端：React + TypeScript
[待实现]
- 后端：Node.js + Express
- 数据库：MongoDB
- AI对话：OpenAI API
- 用户认证：JWT

## 4. 项目规划
[进度说明]
- 第一期：基础功能（部分完成）
  * 用户系统（待实现）
  * 对话功能（已完成）
  * 角色系统（部分完成）
  * 支付功能（待实现）

- 第二期：体验优化（部分完成）
  * 语音功能（已完成）
  * 表情系统（待实现）
  * 历史记录（已完成）
  * 单手操作（已完成）

- 第三期：运营功能（待实现）
  * 管理后台
  * 数据分析
  * 性能优化
  * 安全加固

[主要实现文件说明]
前端核心文件：
1. 页面组件：
   - frontend/src/pages/
     * Home.tsx：首页场景和角色展示
     * Chat.tsx：聊天主界面
     * History.tsx：历史记录页面
     * Manage.tsx：管理页面

2. 共用组件：
   - frontend/src/components/
     * Layout.tsx：整体布局和导航
     * CharacterCard.tsx：角色卡片
     * MessageBubble.tsx：消息气泡
     * VoiceControl.tsx：语音控制

3. 工具和配置：
   - frontend/src/utils/：工具函数
   - frontend/src/config/：配置文件
   - frontend/src/types/：类型定义

[待实现的后端文件]
1. 服务器端：
   - backend/src/
     * server.ts：主服务器
     * routes/：路由处理
     * controllers/：业务逻辑
     * models/：数据模型

2. 数据库：
   - backend/src/database/
     * connection.ts：数据库连接
     * schemas/：数据结构定义

3. API接口：
   - backend/src/api/
     * auth.ts：认证接口
     * chat.ts：对话接口
     * character.ts：角色接口
     * user.ts：用户接口
